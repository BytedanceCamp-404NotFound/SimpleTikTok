// Code generated by goctl. DO NOT EDIT.
// Source: miniomanage.proto

package server

import (
	"context"

	"SimpleTikTok/internal_proto/microservices/miniomanage/internal/logic"
	"SimpleTikTok/internal_proto/microservices/miniomanage/internal/svc"
	"SimpleTikTok/internal_proto/microservices/miniomanage/types/miniomanageserver"
)

type MinioManageServerServer struct {
	svcCtx *svc.ServiceContext
	miniomanageserver.UnimplementedMinioManageServerServer
}

func NewMinioManageServerServer(svcCtx *svc.ServiceContext) *MinioManageServerServer {
	return &MinioManageServerServer{
		svcCtx: svcCtx,
	}
}

// 文件上传
func (s *MinioManageServerServer) PutFileUploader(ctx context.Context, in *miniomanageserver.PutFileUploaderRequest) (*miniomanageserver.PutFileUploaderResponse, error) {
	l := logic.NewPutFileUploaderLogic(ctx, s.svcCtx)
	return l.PutFileUploader(in)
}

// byte形式文件上传
func (s *MinioManageServerServer) PutFileUploaderByte(ctx context.Context, in *miniomanageserver.PutFileUploaderByteRequest) (*miniomanageserver.PutFileUploaderByteResponse, error) {
	l := logic.NewPutFileUploaderByteLogic(ctx, s.svcCtx)
	return l.PutFileUploaderByte(in)
}

// 文件下载
func (s *MinioManageServerServer) GetFileDownloader(ctx context.Context, in *miniomanageserver.GetFileDownloaderRequest) (*miniomanageserver.GetFileDownloaderResponse, error) {
	l := logic.NewGetFileDownloaderLogic(ctx, s.svcCtx)
	return l.GetFileDownloader(in)
}

// 获取Minio视频播放的URL
func (s *MinioManageServerServer) GetPlayUrl(ctx context.Context, in *miniomanageserver.GetPlayUrlRequest) (*miniomanageserver.GetPlayUrlResponse, error) {
	l := logic.NewGetPlayUrlLogic(ctx, s.svcCtx)
	return l.GetPlayUrl(in)
}
